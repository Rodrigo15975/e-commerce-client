name: Node.js CI

on:
  push:
    branches: ['dev']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: node-modules-${{ matrix.node-version }}-${{ hashFiles('package-lock.json', 'yarn.lock') }}
          restore-keys: |
            node-modules-${{ matrix.node-version }}-

      # Cache Next.js build output
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: nextjs-${{ matrix.node-version }}-${{ hashFiles('package.json', 'next.config.js') }}
          restore-keys: |
            nextjs-${{ matrix.node-version }}-

      # Install dependencies
      - run: npm ci

      # Build the project
      - run: npm run build

      # Lint the code
      - name: Correct formatting
        run: npm run lint

      # Start the application
      - name: Running App
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ env.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ env.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ env.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
        run: npm run start
